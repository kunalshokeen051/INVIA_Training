@model WebApplication1.Models.Student

@{
    ViewBag.Title = "CreateEmployee";
}

<h2>CreateEmployee</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section scripts
    {
    <script>
        var typingTimer;
        var doneTypingInterval = 1000;

        $(document).ready(function () {
            $('form input').on('keyup', function () {
                clearTimeout(typingTimer);
                typingTimer = setTimeout(validateInput.bind(this), doneTypingInterval);
            });

            $('form').submit(function (event) {

                var isValid = true;
                $('form input').each(function () {
                    if (!validateInput(this)) {
                        isValid = false;
                    }
                });

                if (!isValid) {
                    alert("Please correct the form errors before submitting.");
                    event.preventDefault();
                }
            });

            function validateInput() {
                var input = $(this);
                var fieldName = input.attr('name');
                var fieldValue = input.val();
                var validationRules = {
                    Name: /^[A-Za-z\s]+$/,
                    Address: /^.{5,100}$/, 
                    Age: /^\d+$/, 
                };

                var validationMessages = {
                    Name: "Name can only contain alphabets and spaces",
                    Address: "Address must be between 5 and 100 characters",
                    Age: "Age must be a numeric value",
                };

                var regex = validationRules[fieldName];
                if (regex && !regex.test(fieldValue)) {
                    alert(validationMessages[fieldName]);
                    return false;
                }

                return true; 
            }
        });
    </script>


}