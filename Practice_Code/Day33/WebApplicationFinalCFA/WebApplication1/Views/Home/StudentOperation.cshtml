@model IEnumerable<WebApplication1.Models.Student>


@{
    ViewBag.Title = "StudentOperation";
}

<h2 class="my-4 h2">Student Records</h2>

<button type="button" class="my-2 btn btn-primary" id="searchButton">Search</button>
<button type="button" class="my-2 btn btn-outline-success">
 @Html.ActionLink("Add", "CreateEmployee", null,new { @class = "links" })
</button>


<div id="pagination" class="text-center">
    <ul class="pagination">
        <li class="page-item">
            <a class="page-link" href="#" data-page="prev">Previous</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="#" data-page="1">1</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="#" data-page="2">2</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="#" data-page="3">3</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="#" data-page="next">Next</a>
        </li>
    </ul>
</div>


<table class="table table-hover table-bordered">
    <tr class="">
        <th class="p-3 mb-2 bg-dark text-white">ID</th>
        <th class="p-3 mb-2 bg-dark text-white">Name</th>
        <th class="p-3 mb-2 bg-dark text-white">Name</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>

            <td>
                <button class="btn btn-outline-info">
                    @Html.ActionLink("Edit", "UpdateEmployee", new { id = item.Id, @class="links"})
                </button> |
                <button class="btn btn-outline-secondary">
                    @Html.ActionLink("Details", "Details", new { id = item.Id })
                </button> |
                <button class="btn btn-outline-warning">
                    @Html.ActionLink("Delete", "DeleteEmployee", new { id = item.Id })
                </button>
            </td>
        </tr>
    }
</table>


<div class="modal fade" id="searchModal" tabindex="-1" role="dialog" aria-labelledby="searchModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="searchModalLabel">Search Students</h4>
                <button type="button" id="close" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Search", "Home", FormMethod.Post, new { id = "searchForm" }))
                {
                    <div class="form-group">
                        <label for="searchType">Search by:</label>
                        <select name="searchType" id="searchType" class="form-control">
                            <option value="Id">ID</option>
                            <option value="Name">Name</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="searchTerm">Search Term:</label>
                        <input type="text" name="searchTerm" id="searchTerm" class="form-control" />
                    </div>
                    <button type="submit" class="my-2 btn btn-primary">Search</button>
                }

            </div>
        </div>
    </div>
</div>


@section scripts
    {
    <script>
        $(document).ready(function () {
            var pageSize = 5; 
            var currentPage = 1;

            function displayPage(page) {
                var startIndex = (page - 1) * pageSize;
                var endIndex = startIndex + pageSize;

                $('table tbody tr').hide();

                $('table tbody tr').slice(startIndex, endIndex).show();
            }

            function generatePagination() {

                var totalStudents = @Model.Count(); 
                var totalPages = Math.ceil(totalStudents / pageSize);

                var paginationHtml = '';
                paginationHtml += '<li class="page-item"><a class="page-link" href="#" data-page="prev">Previous</a></li>';
                for (var i = 1; i <= totalPages; i++) {
                    paginationHtml += '<li class="page-item"><a class="page-link" href="#" data-page="' + i + '">' + i + '</a></li>';
                }
                paginationHtml += '<li class="page-item"><a class="page-link" href="#" data-page="next">Next</a></li>';

                $('#pagination ul').html(paginationHtml);
            }

            generatePagination();
            displayPage(currentPage); 

            $('#pagination').on('click', 'a.page-link', function () {
                var page = $(this).data('page');
                if (page === 'prev' && currentPage > 1) {
                    currentPage--;
                } else if (page === 'next' && currentPage < totalPages) {
                    currentPage++;
                } else if (!isNaN(page)) {
                    currentPage = page;
                }

                displayPage(currentPage);
            });

            $('#searchButton').click(function () {
                $('#searchModal').modal('show');
            });

            $('#close').click(function () {
                $('#searchModal').modal('hide');
            });
        });

    </script>
}